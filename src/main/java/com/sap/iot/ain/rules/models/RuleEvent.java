/* 
 * This class was generated by the JDS command line tool.
 * 
 * It was created by the user SBSS_70962460707363720404167877752465397693708628039895110251133325240
 * on the HANA system mo-70f279fea.mo.sap.corp:30015 
 * for CDS entities contained inside the schema HNR2ZDOEHEYYQMO8_CONNECTED_GOODS_HDI_CONTAINER.
 * 
 * Time of creation: 2017/02/10 19:26:32
 * 
 */
package com.sap.iot.ain.rules.models;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.sap.iot.ain.rules.cron.CronFields;

import java.io.Serializable;
import java.util.Objects;
import javax.persistence.*;
import javax.persistence.Column;
import javax.persistence.Entity;

@Entity
@Table(name = "\"sap.ain.metaData::Rules.RuleEvent\"")
@IdClass(RuleEventPK.class)
@JsonIgnoreProperties(ignoreUnknown = true)
public class RuleEvent implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @Column(name = "\"Client\"", nullable = true, length = 32)
    private String client;

    @Id
    @Column(name = "\"ID\"", nullable = false, length = 32)
    private String id;

    @Column(name = "\"RuleID\"", length = 32)
    private String ruleID;

    @Column(name = "\"EventID\"", length = 32)
    private String eventID;

    @Column(name = "\"RunSchedule\"", length = 200)
    private String runSchedule;

    @Column(name = "\"NotRunSchedule\"", length = 200)
    private String notRunSchedule;

    @Column(name = "\"EventName\"", length = 200)
    private String eventName;
    
    @JsonProperty("schedule")
    @Transient
    private CronFields cron;
    
    @Transient
    private String crondescription;  

    public String getCrondescription() {
      return crondescription;
    }

    public void setCrondescription(String crondescription) {
      this.crondescription = crondescription;
    }

    public CronFields getCron() {
		return cron;
	}

	public void setCron(CronFields cron) {
		this.cron = cron;
	}

	public String getClient() {
        return client;
    }

    public void setClient(String client) {
        this.client = client;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getRuleID() {
        return ruleID;
    }

    public void setRuleID(String ruleID) {
        this.ruleID = ruleID;
    }

    public String getEventID() {
        return eventID;
    }

    public void setEventID(String eventID) {
        this.eventID = eventID;
    }

    public String getRunSchedule() {
        return runSchedule;
    }

    public void setRunSchedule(String runSchedule) {
        this.runSchedule = runSchedule;
    }

    public String getNotRunSchedule() {
        return notRunSchedule;
    }

    public void setNotRunSchedule(String notRunSchedule) {
        this.notRunSchedule = notRunSchedule;
    }

    public String getEventName() {
        return eventName;
    }

    public void setEventName(String eventName) {
        this.eventName = eventName;
    }

    @Override
    public int hashCode() {
        int hash = 3;
        hash = 11 * hash + Objects.hashCode(this.client);
        hash = 11 * hash + Objects.hashCode(this.id);
        hash = 11 * hash + Objects.hashCode(this.ruleID);
        hash = 11 * hash + Objects.hashCode(this.eventID);
        hash = 11 * hash + Objects.hashCode(this.runSchedule);
        hash = 11 * hash + Objects.hashCode(this.notRunSchedule);
        hash = 11 * hash + Objects.hashCode(this.eventName);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final RuleEvent other = (RuleEvent) obj;
        if (!Objects.equals(this.client, other.client)) {
            return false;
        }
        if (!Objects.equals(this.id, other.id)) {
            return false;
        }
        if (!Objects.equals(this.ruleID, other.ruleID)) {
            return false;
        }
        if (!Objects.equals(this.eventID, other.eventID)) {
            return false;
        }
        if (!Objects.equals(this.runSchedule, other.runSchedule)) {
            return false;
        }
        if (!Objects.equals(this.notRunSchedule, other.notRunSchedule)) {
            return false;
        }
        if (!Objects.equals(this.eventName, other.eventName)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "RuleEvent{" + "client=" + client + ", id=" + id + ", ruleID=" + ruleID + ", eventID=" + eventID + ", runSchedule=" + runSchedule + ", notRunSchedule=" + notRunSchedule + ", eventName=" + eventName + '}';
    }

}
